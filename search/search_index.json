{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview About the app Kanjiclub is an open-source cloud app for vocabulary training. Go to kanjiclub.tk to try it out for yourself.","title":"Overview"},{"location":"#overview","text":"","title":"Overview"},{"location":"#about-the-app","text":"Kanjiclub is an open-source cloud app for vocabulary training. Go to kanjiclub.tk to try it out for yourself.","title":"About the app"},{"location":"adding-vocabulary/","text":"Adding vocabulary Getting vocabulary into kanjiclub is easy. There are three ways to do this: 1. The Editor You can add words manually from sources such as a textbook using the built-in editor: To add a new word, fill out at least the Foreign and Native fields and press Add or the Enter key on your keyboard. The word will now appear on the bottom of the list, and the lesson is saved automatically. To modify or remove an existing word, select a word in the list. The editor is now in change mode. The selected word will be higlighted in the list, and you can update or remove it. To exit the change mode, click the Cancel Edit button. 2. Custom text data The custom text data importer is a powerful tool to get any kind of digitalized vocabulary data into Kanjiclub. It supports plain text files with a template at the beginning. Suppose you have the following dataset from a foreign source in plaintext: ka \u304b ku \u304f For a human, this is clearly the native and the foreign field, each followed by a newline. For kanjiclub to understand such data, we have to insert a template at the top of the .txt file. This is very simple: A template line always begins with a backtick ( ` ). The template for the file above would be: `native ` `foreign ` This tells kanjiclub to interpret each vocab entry as native, followed by newline, followed by foreign and another newline. This works with any of the available vocab data fields foreign , synonym , gender , native , and comment . 3. Importing from existing software Kanjiclub currently supports importing vocabulary from ebVocab and Vocup . Just use the Edit > Import function to upload the files from those projects to kanjiclub, and they'll show up in your lesson overview. If you'd like to add support for other software, feel free to open a pull request on GitHub :^)","title":"Adding vocabulary"},{"location":"adding-vocabulary/#adding-vocabulary","text":"Getting vocabulary into kanjiclub is easy. There are three ways to do this:","title":"Adding vocabulary"},{"location":"adding-vocabulary/#1-the-editor","text":"You can add words manually from sources such as a textbook using the built-in editor: To add a new word, fill out at least the Foreign and Native fields and press Add or the Enter key on your keyboard. The word will now appear on the bottom of the list, and the lesson is saved automatically. To modify or remove an existing word, select a word in the list. The editor is now in change mode. The selected word will be higlighted in the list, and you can update or remove it. To exit the change mode, click the Cancel Edit button.","title":"1. The Editor"},{"location":"adding-vocabulary/#2-custom-text-data","text":"The custom text data importer is a powerful tool to get any kind of digitalized vocabulary data into Kanjiclub. It supports plain text files with a template at the beginning. Suppose you have the following dataset from a foreign source in plaintext: ka \u304b ku \u304f For a human, this is clearly the native and the foreign field, each followed by a newline. For kanjiclub to understand such data, we have to insert a template at the top of the .txt file. This is very simple: A template line always begins with a backtick ( ` ). The template for the file above would be: `native ` `foreign ` This tells kanjiclub to interpret each vocab entry as native, followed by newline, followed by foreign and another newline. This works with any of the available vocab data fields foreign , synonym , gender , native , and comment .","title":"2. Custom text data"},{"location":"adding-vocabulary/#3-importing-from-existing-software","text":"Kanjiclub currently supports importing vocabulary from ebVocab and Vocup . Just use the Edit > Import function to upload the files from those projects to kanjiclub, and they'll show up in your lesson overview. If you'd like to add support for other software, feel free to open a pull request on GitHub :^)","title":"3. Importing from existing software"},{"location":"practicing/","text":"Practicing Kanjiclub uses an algorithm similar to spaced-repetition systems to help you learn new vocabulary faster, and keep it in memory for longer. To start, simply select the lessons you want to practice from the Practice menu: Click Go , and the software will automatically generate a practice unit for you, and update your strong, medium and weak words according to your performance. Each practice unit will contain 8 words, however you can just keep pressing Enter at the end of a practice to create a new one - That way you can practice for as long as you like.","title":"Practicing"},{"location":"practicing/#practicing","text":"Kanjiclub uses an algorithm similar to spaced-repetition systems to help you learn new vocabulary faster, and keep it in memory for longer. To start, simply select the lessons you want to practice from the Practice menu: Click Go , and the software will automatically generate a practice unit for you, and update your strong, medium and weak words according to your performance. Each practice unit will contain 8 words, however you can just keep pressing Enter at the end of a practice to create a new one - That way you can practice for as long as you like.","title":"Practicing"},{"location":"API/about/","text":"About the Web API The web API is a collection of REST endpoints that the VueJS app uses to communicate with the server. Endpoints of this API are documented here Formatting Endpoint name Optional description METHOD /endpoint/url optional request body optional response body Generic responses A generic response is an HTTP response without a body. The status of the reply should be in the HTTP status code. Generic responses are omitted from the docs. Endpoints /api/accounts /api/stats /api/languages /api/lessons /api/words /api/practice","title":"About the Web API"},{"location":"API/about/#about-the-web-api","text":"The web API is a collection of REST endpoints that the VueJS app uses to communicate with the server. Endpoints of this API are documented here","title":"About the Web API"},{"location":"API/about/#formatting","text":"Endpoint name Optional description METHOD /endpoint/url optional request body optional response body","title":"Formatting"},{"location":"API/about/#generic-responses","text":"A generic response is an HTTP response without a body. The status of the reply should be in the HTTP status code. Generic responses are omitted from the docs.","title":"Generic responses"},{"location":"API/about/#endpoints","text":"/api/accounts /api/stats /api/languages /api/lessons /api/words /api/practice","title":"Endpoints"},{"location":"API/accounts/","text":"Accounts API Create account POST /api/accounts/new { \"email\": \"\", \"username\": \"\", \"password\": \"\" } { \"reason\": \"\" } Log in POST /api/accounts/login { \"user\": \"\", \"password\": \"\", \"rememberMe\": false } Log out POST /api/accounts/logout Get info about user GET /api/accounts/me { \"username\": \"\", \"settings\": { \"currentLanguage\": \"\", \"includeSynonyms\": true, \"randomizeDir\": true, \"ignoreCase\": true } } Change settings PUT /api/accounts/settings { \"currentLanguage\": \"\", \"includeSynonyms\": true, \"randomizeDir\": true, \"ignoreCase\": true }","title":"Accounts API"},{"location":"API/accounts/#accounts-api","text":"","title":"Accounts API"},{"location":"API/accounts/#create-account","text":"POST /api/accounts/new { \"email\": \"\", \"username\": \"\", \"password\": \"\" } { \"reason\": \"\" }","title":"Create account"},{"location":"API/accounts/#log-in","text":"POST /api/accounts/login { \"user\": \"\", \"password\": \"\", \"rememberMe\": false }","title":"Log in"},{"location":"API/accounts/#log-out","text":"POST /api/accounts/logout","title":"Log out"},{"location":"API/accounts/#get-info-about-user","text":"GET /api/accounts/me { \"username\": \"\", \"settings\": { \"currentLanguage\": \"\", \"includeSynonyms\": true, \"randomizeDir\": true, \"ignoreCase\": true } }","title":"Get info about user"},{"location":"API/accounts/#change-settings","text":"PUT /api/accounts/settings { \"currentLanguage\": \"\", \"includeSynonyms\": true, \"randomizeDir\": true, \"ignoreCase\": true }","title":"Change settings"},{"location":"API/languages/","text":"Languages API Languages are identified by their language code, which is a 2-letter ISO code ( ISO-639-1 ) Add new language POST /api/languages/new { \"languageCode\": \"\" } Get list of the users languages GET /api/languages [ { \"code\": \"languageCode\", \"name\": \"languageName\" } ] Get list of all supported languages GET /api/languages/all [ { \"<code>\": \"<name>\" } ]","title":"Languages API"},{"location":"API/languages/#languages-api","text":"Languages are identified by their language code, which is a 2-letter ISO code ( ISO-639-1 )","title":"Languages API"},{"location":"API/languages/#add-new-language","text":"POST /api/languages/new { \"languageCode\": \"\" }","title":"Add new language"},{"location":"API/languages/#get-list-of-the-users-languages","text":"GET /api/languages [ { \"code\": \"languageCode\", \"name\": \"languageName\" } ]","title":"Get list of the users languages"},{"location":"API/languages/#get-list-of-all-supported-languages","text":"GET /api/languages/all [ { \"<code>\": \"<name>\" } ]","title":"Get list of all supported languages"},{"location":"API/lessons/","text":"Lessons API Lessons are identified across languages using the UUID generated by the server. A lesson always belongs to a language. Get lessons GET /api/lessons?lang={languageCode} { \"lessons\": [ LessonInfo ] } Create lesson POST /api/lessons/new { \"name\": \"\", \"language\": \"languageCode\" } { \"id\": \"\" } Edit lesson PUT /api/lessons/{lessonId} { \"name\": \"\", \"language\": \"newLanguageCode\" } Delete lesson DELETE /api/lessons/{lessonId} Import vocabulary POST /api/lessons/import { \"filename\": \"\", \"language\": \"languageCode\", \"content\": \"<dataUri>\" }","title":"Lessons API"},{"location":"API/lessons/#lessons-api","text":"Lessons are identified across languages using the UUID generated by the server. A lesson always belongs to a language.","title":"Lessons API"},{"location":"API/lessons/#get-lessons","text":"GET /api/lessons?lang={languageCode} { \"lessons\": [ LessonInfo ] }","title":"Get lessons"},{"location":"API/lessons/#create-lesson","text":"POST /api/lessons/new { \"name\": \"\", \"language\": \"languageCode\" } { \"id\": \"\" }","title":"Create lesson"},{"location":"API/lessons/#edit-lesson","text":"PUT /api/lessons/{lessonId} { \"name\": \"\", \"language\": \"newLanguageCode\" }","title":"Edit lesson"},{"location":"API/lessons/#delete-lesson","text":"DELETE /api/lessons/{lessonId}","title":"Delete lesson"},{"location":"API/lessons/#import-vocabulary","text":"POST /api/lessons/import { \"filename\": \"\", \"language\": \"languageCode\", \"content\": \"<dataUri>\" }","title":"Import vocabulary"},{"location":"API/notes/","text":"Notes API Notes are identified using the UUID generated by the server. A note always belongs to a language. Get notes GET /api/notes?lang={languageCode} { \"note\": [ NoteInfo ] } Get single note GET /api/notes/{noteId} { \"title\": \"\", \"content\": \"\" } Create note POST /api/notes/new { \"title\": \"\", \"language\": \"languageCode\" } { \"id\": \"\" } Edit note PUT /api/notes/{noteId} { \"title\": \"\", \"content\": \"\" } Delete note DELETE /api/notes/{noteId}","title":"Notes API"},{"location":"API/notes/#notes-api","text":"Notes are identified using the UUID generated by the server. A note always belongs to a language.","title":"Notes API"},{"location":"API/notes/#get-notes","text":"GET /api/notes?lang={languageCode} { \"note\": [ NoteInfo ] }","title":"Get notes"},{"location":"API/notes/#get-single-note","text":"GET /api/notes/{noteId} { \"title\": \"\", \"content\": \"\" }","title":"Get single note"},{"location":"API/notes/#create-note","text":"POST /api/notes/new { \"title\": \"\", \"language\": \"languageCode\" } { \"id\": \"\" }","title":"Create note"},{"location":"API/notes/#edit-note","text":"PUT /api/notes/{noteId} { \"title\": \"\", \"content\": \"\" }","title":"Edit note"},{"location":"API/notes/#delete-note","text":"DELETE /api/notes/{noteId}","title":"Delete note"},{"location":"API/objects/","text":"API objects LessonInfo { \"id\": \"\", \"name\": \"\", \"createdOn\": \"\", \"language\": \"\" } WordInfo { \"id\": \"\", \"lesson\": \"\", \"language\": \"\", \"createdOn\": \"\", \"lastPracticed\": \"\", \"strength\": \"weak\", \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } } NoteInfo { \"id\": \"\", \"language\": \"\", \"createdOn\": \"\", \"lastModified\": \"\", \"title\": \"\" } WordStrength weak medium strong","title":"API objects"},{"location":"API/objects/#api-objects","text":"","title":"API objects"},{"location":"API/objects/#lessoninfo","text":"{ \"id\": \"\", \"name\": \"\", \"createdOn\": \"\", \"language\": \"\" }","title":"LessonInfo"},{"location":"API/objects/#wordinfo","text":"{ \"id\": \"\", \"lesson\": \"\", \"language\": \"\", \"createdOn\": \"\", \"lastPracticed\": \"\", \"strength\": \"weak\", \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } }","title":"WordInfo"},{"location":"API/objects/#noteinfo","text":"{ \"id\": \"\", \"language\": \"\", \"createdOn\": \"\", \"lastModified\": \"\", \"title\": \"\" }","title":"NoteInfo"},{"location":"API/objects/#wordstrength","text":"weak medium strong","title":"WordStrength"},{"location":"API/practice/","text":"Practice API The practice API is used to generate a new test for the user. Practices are not persisted to the database, only their results. Generate new practice POST /api/practice/{languageCode}/new { \"target\": \"lesson\", \"lessons\": [ lessonId ] } OR { \"target\": \"word_group\", \"strength\": \"weak\" } { \"words\": [ WordInfo ] } Practice completed POST /api/practice/{languageCode}/complete { \"results\": [ { \"wordId\": \"\", \"attempts\": 0 } ] }","title":"Practice API"},{"location":"API/practice/#practice-api","text":"The practice API is used to generate a new test for the user. Practices are not persisted to the database, only their results.","title":"Practice API"},{"location":"API/practice/#generate-new-practice","text":"POST /api/practice/{languageCode}/new { \"target\": \"lesson\", \"lessons\": [ lessonId ] } OR { \"target\": \"word_group\", \"strength\": \"weak\" } { \"words\": [ WordInfo ] }","title":"Generate new practice"},{"location":"API/practice/#practice-completed","text":"POST /api/practice/{languageCode}/complete { \"results\": [ { \"wordId\": \"\", \"attempts\": 0 } ] }","title":"Practice completed"},{"location":"API/stats/","text":"Stats API The stats API is used to fetch statistical information about the users learning progress. Stats summary GET /api/stats { \"streak\": 0, \"strong\": 0, \"medium\": 0, \"weak\": 0 }","title":"Stats API"},{"location":"API/stats/#stats-api","text":"The stats API is used to fetch statistical information about the users learning progress.","title":"Stats API"},{"location":"API/stats/#stats-summary","text":"GET /api/stats { \"streak\": 0, \"strong\": 0, \"medium\": 0, \"weak\": 0 }","title":"Stats summary"},{"location":"API/words/","text":"Words API Words are identified using their randomly generated word id Get words Gets a list of words from your account GET /api/words { \"words\": [ WordInfo ] } This endpoint has multiple query parameters to filter the returned words: lang : Filter by language code strength : Filter by word strength. May be weak , medium , strong lesson : Filter by lesson id. query : Search in the contents of the word (any one of the four content fields) Create word POST /api/words/new { \"lesson\": \"\", \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } } { \"id\": \"\" } Update word PUT /api/words/{wordId} { \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } } Delete word DELETE /api/words/{wordId}","title":"Words API"},{"location":"API/words/#words-api","text":"Words are identified using their randomly generated word id","title":"Words API"},{"location":"API/words/#get-words","text":"Gets a list of words from your account GET /api/words { \"words\": [ WordInfo ] } This endpoint has multiple query parameters to filter the returned words: lang : Filter by language code strength : Filter by word strength. May be weak , medium , strong lesson : Filter by lesson id. query : Search in the contents of the word (any one of the four content fields)","title":"Get words"},{"location":"API/words/#create-word","text":"POST /api/words/new { \"lesson\": \"\", \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } } { \"id\": \"\" }","title":"Create word"},{"location":"API/words/#update-word","text":"PUT /api/words/{wordId} { \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } }","title":"Update word"},{"location":"API/words/#delete-word","text":"DELETE /api/words/{wordId}","title":"Delete word"},{"location":"developing/database/","text":"Database Accounts { \"_id\": \"\", \"email\": \"\", \"username\": \"\", \"password\": \"\", \"createdOn\": Date, \"languages\": [], \"stats\": { \"lastLogin\": Date, \"lastPractice\": Date, \"streak\": Number }, \"settings\": { \"currentLanguage\": \"\", \"includeSynonyms\": true, \"randomizeDir\": true, \"ignoreCase\": true } } Lessons { \"_id\": \"\", \"name\": \"\", \"account\": Account.id, \"language\": \"\", \"createdOn\": Date } Words { \"_id\": \"\", \"account\": Account.id, \"language\": \"\", \"lesson\": Lesson.id, \"createdOn\": Date, \"strength\": \"weak\", \"stats\": { \"lastPracticed\": Date, \"previouslyCorrect\": false }, \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } } Notes { \"_id\": \"\", \"account\": Account.id, \"language\": \"\", \"createdOn\": Date, \"lastModified\": Date, \"title\": \"\", \"content\": \"\" }","title":"Database"},{"location":"developing/database/#database","text":"","title":"Database"},{"location":"developing/database/#accounts","text":"{ \"_id\": \"\", \"email\": \"\", \"username\": \"\", \"password\": \"\", \"createdOn\": Date, \"languages\": [], \"stats\": { \"lastLogin\": Date, \"lastPractice\": Date, \"streak\": Number }, \"settings\": { \"currentLanguage\": \"\", \"includeSynonyms\": true, \"randomizeDir\": true, \"ignoreCase\": true } }","title":"Accounts"},{"location":"developing/database/#lessons","text":"{ \"_id\": \"\", \"name\": \"\", \"account\": Account.id, \"language\": \"\", \"createdOn\": Date }","title":"Lessons"},{"location":"developing/database/#words","text":"{ \"_id\": \"\", \"account\": Account.id, \"language\": \"\", \"lesson\": Lesson.id, \"createdOn\": Date, \"strength\": \"weak\", \"stats\": { \"lastPracticed\": Date, \"previouslyCorrect\": false }, \"data\": { \"foreign\": \"\", \"synonym\": \"\", \"gender\": \"\", \"native\": \"\", \"comment\": \"\" } }","title":"Words"},{"location":"developing/database/#notes","text":"{ \"_id\": \"\", \"account\": Account.id, \"language\": \"\", \"createdOn\": Date, \"lastModified\": Date, \"title\": \"\", \"content\": \"\" }","title":"Notes"}]}